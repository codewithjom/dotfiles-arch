#!/bin/sh

printf "\e[1;32m########################################################################################\e[0m\n"
printf "\e[1;32m# README:                                                                              #\e[0m\n"
printf "\e[1;32m# You are about to install JDOS an installation	and deployment script	of JD's desktop. #\e[0m\n"
printf "\e[1;32m# WARNING:                                                                             #\e[0m\n"
printf "\e[1;32m# Run this script at your own risk.                                                    #\e[0m\n"
printf "\e[1;32m# AUTHOR:                                                                              #\e[0m\n"
printf "\e[1;32m# Jom Dollesin                                                                         #\e[0m\n"
printf "\e[1;32m# Gitlab:                                                                              #\e[0m\n"
printf "\e[1;32m# https://gitlab.com/nightjd/                                                          #\e[0m\n"
printf "\e[1;32m########################################################################################\e[0m\n"
sleep 3
while true; do
	read -p "Continue? [Y/n] " yn
	case $yn in
		[Yy]* ) break;;
    [Nn]* ) exit;break;;
		"" ) break;;
    * ) printf "\e[1;32mPlease answer y or n.\e[0m\n";;
	esac
done

printf "\e[1;32m#########################\e[0m\n"
printf "\e[1;32m## Installing packages ##\e[0m\n"
printf "\e[1;32m#########################\e[0m\n"

sudo pacman -Sy
install_ly=false
install_neovim=true
install_paru=true

if [[ $install_paru = true ]]; then
	cd ~/
	git clone https://aur.archlinux.org/paru.git
	mv paru .paru;cd .paru/;makepkg -si --noconfirm;cd
fi

if [[ $install_ly = true ]]; then
	cd ~/
  git clone https://aur.archlinux.org/ly
  mv ly .ly;cd .ly;makepkg -si --noconfirm;cd
  sudo systemctl enable ly
fi

if [[ $install_neovim = true ]]; then
	cd ~/
	sudo pacman -S --noconfirm neovim nodejs python-pip
	curl -fLo ~/.config/nvim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
	curl --compressed -o- -L https://yarnpkg.com/install.sh | bash
	yarn global add neovim
	paru -S --noconfirm	npm
	sudo npm i -g typescript typescript-language-server
	python3 -m pip install --user --upgrade pynvim;cd
fi

# Install themes, etc.
paru -S --noconfirm python-iwlib arc-gtk-theme dracula-gtk-theme dracula-icons-git dracula-cursors-git
paru -S --aur --noconfirm betterlockscreen preload picom-git light-git devour

# Install fonts
paru -S --aur --noconfirm ttf-mononoki nerd-fonts-mononoki nerd-fonts-jetbrains-mono otf-raleway nerd-fonts-hack ttf-ms-fonts ttf-material-icons noto-color-emoji-fontconfig
paru -S --noconfirm adobe-source-code-pro-fonts adobe-source-han-sans-cn-fonts nerd-fonts-victor-mono

# Install packages
sudo pacman -S --noconfirm tlp tlp-rdw ufw qutebrowser rofi lxappearance udisks2 pcmanfm scrot nitrogen lxsession volumeicon xcb-util-cursor exa python-pip openjdk11-src sxiv mpv pavucontrol plocate dunst pamixer conky alacritty min blueberry trayer fish brightnessctl blueman stow zathura zathura-pdf-poppler vimb gnome-keyring emacs cmake dmenu xdo

# Install more fonts
sudo pacman -S --noconfirm ttf-cascadia-code ttf-fira-code ttf-fira-mono ttf-font-awesome ttf-inconsolata ttf-jetbrains-mono ttf-ubuntu-font-family

# Install starship prompt (needed)
sh -c "$(curl -fsSL https://starship.rs/install.sh)"
chsh -s /bin/fish $USER
pip3 install psutil

# JDOS
printf "\e[1;32m###################################\e[0m\n"
printf "\e[1;32m## You are about to install JDOS ##\e[0m\n"
printf "\e[1;32m###################################\e[0m\n"

sudo pacman -Sy
paru -S qtile sxhkd pfetch
git	clone https://github.com/codewithjom/dotfiles.git ~/dotfiles
cd ~/dotfiles
cp -rf * ~/
rm -rf ~/dotfiles
git clone https://github.com/codewithjom/qtile-config.git ~/.config/qtile
git clone https://github.com/codewithjom/emacs-config.git ~/.emacs.d
git clone https://github.com/codewithjom/neovim-config.git ~/.config/nvim

# Enable daemon
sudo systemctl enable tlp.service
sudo systemctl enable ufw.service
sudo systemctl enable betterlockscreen@$USER
sudo systemctl enable preload.service
sudo systemctl enable nvidia-hibernate.service
sudo systemctl enable nvidia-persistenced.service
sudo systemctl enable nvidia-resume.service
sudo systemctl enable nvidia-suspend.service

printf "\e[1;32m##############################\e[0m\n"
printf "\e[1;32m## JDOS has been installed! ##\e[0m\n"
printf "\e[1;32m##############################\e[0m\n"
while true; do
	read -p "Do you want to reboot? (recommended) [Y/n] " yn
	case $yn in
		[Yy]* ) reboot;;
		[Nn]* ) exit;break;;
		"" ) reboot;;
		* ) printf "\e[1;32mPlease answer y or n.\e[0m\n";;
	esac
done
